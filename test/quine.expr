letrec (
  replaceFirst = lambda (s a b cont) {
    if (lt cont 1) then s
    else if (lt (strlen s) 1) then s
    else letrec (
      head = (strslice s 0 1)
      tail = (strslice s 1 (strlen s))
    ) {
      if (lt (add (strlt head a) (strlt a head)) 1) then (strcat b (replaceFirst tail a b 0))
      else (strcat head (replaceFirst tail a b 1))
    }
  }
  s = "letrec (
  replaceFirst = lambda (s a b cont) {
    if (lt cont 1) then s
    else if (lt (strlen s) 1) then s
    else letrec (
      head = (strslice s 0 1)
      tail = (strslice s 1 (strlen s))
    ) {
      if (lt (add (strlt head a) (strlt a head)) 1) then (strcat b (replaceFirst tail a b 0))
      else (strcat head (replaceFirst tail a b 1))
    }
  }
  s = _
) {
  (replaceFirst s \"_\" (strquote s) 1)
}"
) {
  (replaceFirst s "_" (strquote s) 1)
}
